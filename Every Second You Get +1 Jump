local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local winsFolder = workspace:FindFirstChild("Wins")
local leaderstats = player:FindFirstChild("leaderstats")
local winsStat = leaderstats and leaderstats:FindFirstChild("Wins")
local objects = {}
local originalPositions = {}
local animationRunning = false
local autorebirthRunning = false

local itemsToAnimate = {
    {threshold = 15, add = "World2", remove = nil},
    {threshold = 50, add = "World3", remove = "World1"},
    {threshold = 100, add = "World4", remove = "World2"},
    {threshold = 300, add = "World5", remove = "World3"},
    {threshold = 500, add = "World6", remove = "World4"},
    {threshold = 800, add = "World7", remove = "World5"},
    {threshold = 1100, add = "World8", remove = "World6"},
    {threshold = 1500, add = "World9", remove = "World7"},
    {threshold = 2000, add = "World10", remove = "World8"},
    {threshold = 5000, add = "World11", remove = "World9"},
    {threshold = 10000, add = "World12", remove = "World10"},
    {threshold = 15000, add = "World13", remove = "World11"},
    {threshold = 25000, add = "World14", remove = "World12"}
}

local function setupObjects()
    if winsFolder and winsStat then
        local winsValue = winsStat.Value
        for _, item in ipairs(itemsToAnimate) do
            if winsValue > item.threshold then
                if item.add then
                    local addItem = winsFolder:FindFirstChild(item.add)
                    if addItem then
                        originalPositions[addItem] = addItem.Position
                        addItem.CanCollide = false
                        addItem.Anchored = true
                        table.insert(objects, addItem)
                    end
                end
                if item.remove then
                    for index, obj in ipairs(objects) do
                        if obj.Name == item.remove then
                            obj.Position = originalPositions[obj]
                            table.remove(objects, index)
                            break
                        end
                    end
                end
            end
        end
    else
        warn("Wins или leaderstats не найдены.")
    end
end


local function animateObjects()
    while animationRunning do
        for index, obj in ipairs(objects) do
            local offset = Vector3.new(0, math.sin(tick() * 4 + index) * 20, 0) 
            local heightLimit = math.min(index * 2, 5) 
            obj.Position = humanoidRootPart.Position + Vector3.new(0, heightLimit, 0) + offset
        end
        task.wait(0.05)
    end
end

local function resetObjects()
    for _, obj in ipairs(objects) do
        if originalPositions[obj] then
            obj.Position = originalPositions[obj]
        end
    end
    objects = {}
    originalPositions = {}
end


local function toggleAutoRebirth(enabled)
    if enabled then
        autorebirthRunning = true
        task.spawn(function()
            while autorebirthRunning do
                local rebirthEvent = game:GetService("ReplicatedStorage"):FindFirstChild("RebirthEvent")
                if rebirthEvent and rebirthEvent:IsA("RemoteEvent") then
                    rebirthEvent:FireServer()
                end
                task.wait(5)
            end
        end)
    else
        autorebirthRunning = false
    end
end


local function toggleAnimation(enabled)
    if enabled then
        if not animationRunning then
            animationRunning = true
            setupObjects()
            task.spawn(animateObjects)
        end
    else
        animationRunning = false
        resetObjects()
    end
end


local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Every Second You Get +1 Jump",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "By Version",
    ConfigurationSaving = {
        Enabled = false,
    },
    KeySystem = false,
})

local Tab = Window:CreateTab("Main")
Tab:CreateToggle({
    Name = "Auto Farm",
    CurrentValue = false,
    Callback = function(value)
        toggleAnimation(value)
    end
})

Tab:CreateToggle({
    Name = "Auto Rebirth",
    CurrentValue = false,
    Callback = function(value)
        toggleAutoRebirth(value)
    end
})
